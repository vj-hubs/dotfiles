# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# Path to your Oh My Zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time Oh My Zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='nvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch $(uname -m)"

# Set personal aliases, overriding those provided by Oh My Zsh libs,
# plugins, and themes. Aliases can be placed here, though Oh My Zsh
# users are encouraged to define aliases within a top-level file in
# the $ZSH_CUSTOM folder, with .zsh extension. Examples:
# - $ZSH_CUSTOM/aliases.zsh
# - $ZSH_CUSTOM/macos.zsh
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"


# Add Homebrew to your PATH
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

# Add Starship to your PATH
eval -- "$(/home/linuxbrew/.linuxbrew/bin/starship init zsh --print-full-init)"
source /home/linuxbrew/.linuxbrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh
plugins=(git
        z
        aliases
        #kube-ps1
        zsh-autosuggestions
        #zsh-autocomplete
        #fzf-zsh-plugin
        )

# Exported from mac
alias code='cursor'
alias main='git checkout main && git pull'
alias pull='git pull'
alias push='git push'
alias dev='cd ~/Git'
alias de='cd ~/Git/data-engineering'
alias ops='cd ~/Git/coreops'
alias infra='cd ~/Git/coreops/infra'
alias repos='cd ~/Git/repos'
alias learn='cd ~/Git/development'
alias sts='sh ~/Git/aws_sts.sh'
alias refresh='source ~/.zshrc'
alias k='kubectl'
alias kx='kubectx'
alias aws-prod='kubectl config use-context hubs-prod/web/admin && aws-vault exec hubs-prod_admin'
alias aws-stage='kubectl config use-context hubs-stage/web/admin && aws-vault exec hubs-stage_admin'
alias aws-dev='kubectl config use-context hubs-dev/web/admin && aws-vault exec hubs-dev_admin'
alias aws-mgmt='aws-vault exec 3dhubs-management_admin'
alias aws-prod-data='unset AWS_VAULT && aws-vault exec hubs-prod_data'
alias tg='terragrunt'
alias tgfmt='terragrunt hclfmt --terragrunt-check --terragrunt-diff'
alias tf='terraform'
#alias spyder='nohup spyder --new-instance option & disown'
alias cmds='cursor ~/Git/devel/cmds.txt'
alias notebook='nohup jupyter-notebook & disown'
alias jupyter='docker rm pyspark && docker run -d -p 8888:8888 -e NB_UID=1000 -e GRANT_SUDO=yes --user root --name pyspark -v ~/Git:/home/jovyan/work jupyter/pyspark-notebook && docker logs pyspark'export PATH="/usr/local/opt/libpq/bin:$PATH"
alias activate_poetry="source \"\$(poetry env list --full-path | grep Activated | cut -d' ' -f1 )/bin/activate\""
alias pomerium-cli='/mnt/c/Users/User/scoop/shims/pomerium-cli.exe'
alias docker-login='aws-vault exec 3dhubs-management_shared-resources -- aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 312805905296.dkr.ecr.eu-west-1.amazonaws.com'
alias devel='cd /mnt/e/devel'

ns() {
    kubectl config set-context --current --namespace=$1
}

vs() {
    cd $1
    cursor .
}

cp ~/.zshrc /mnt/e/devel/
cp ~/.zshrc /home/devops/Git/development/dotfiles/zsh/.zshrc_wsl
[[ -f ~/.inshellisense/zsh/init.zsh ]] && source ~/.inshellisense/zsh/init.zsh
export DISABLE_UNTRACKED_FILES_DIRTY="true"
export TERRAGRUNT_TFPATH="terraform"
export TERRAGRUNT_PROVIDER_CACHE=1
export TERRAGRUNT_NON_INTERACTIVE=true
export TERRAGRUNT_IGNORE_EXTERNAL_DEPENDENCIES=true
export TERRAGRUNT_FETCH_DEPENDENCY_OUTPUT_FROM_STATE=true
export TF_CLI_CONFIG_FILE="$HOME/.terraform.d/terraform.rc"
export DOCKER_DEFAULT_PLATFORM="linux/amd64"
export AWS_DEFAULT_REGION="eu-west-1"
export AWS_VAULT_BACKEND="pass"
export LDFLAGS=“-L$(brew --prefix tcl-tk)/lib”
export CPPFLAGS=“-I$(brew --prefix tcl-tk)/include”
export PKG_CONFIG_PATH=“$(brew --prefix tcl-tk)/lib/pkgconfig”
export PATH=“$(brew --prefix tcl-tk)/bin:$PATH”
export PATH="/home/linuxbrew/.linuxbrew/opt/postgresql@16/bin:$PATH"
export LDFLAGS="-L/home/linuxbrew/.linuxbrew/opt/postgresql@16/lib"
export CPPFLAGS="-I/home/linuxbrew/.linuxbrew/opt/postgresql@16/include"


export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init - zsh)"

_lc() {
    "$@" | lolcat
}
alias lc='_lc '

# Added from devops/bootstrap.sh
export PATH="/home/devops/.devops-bin:$PATH"
export AWS_CONFIG_FILE="/home/devops/Git/development/dotfiles/admin/org/generated/aws-vault.cfg"
export KUBECONFIG="/home/devops/.devops-config/kubeconfig.yaml"
export DOCKER_CONFIG="/home/devops/.devops-config/docker"
